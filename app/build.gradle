apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

// Check dependencies.
// https://github.com/ben-manes/gradle-versions-plugin
apply plugin: 'com.github.ben-manes.versions'

// Fabric
apply plugin: 'io.fabric'

apply from: '../config/quality/quality.gradle'
apply from: '../config/signing/signing.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.mercandalli.android.browser"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.appVersionCode
        versionName rootProject.ext.appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs "en", "fr", "pt-rBR", "pt-rPT"
    }

    bundle {
        density.enableSplit = true
        abi.enableSplit = true
        language.enableSplit = false
    }

    dexOptions {
        // 4 Gigabytes is a maximum heap size for dex operation
        // http://stackoverflow.com/questions/33750404/android-gradle-what-is-javamaxheapsize-4g
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        releaseSigningConfig rootProject.ext.releaseTubeSigningConfig
    }

    buildTypes {
        release {
            signingConfig signingConfigs.releaseSigningConfig
            minifyEnabled true
            shrinkResources true
            multiDexEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            versionNameSuffix ".dev"
        }
    }

    testOptions {
        animationsDisabled = true
    }

    sourceSets {
        main {
            // Split resources.
            // https://medium.com/google-developer-experts/android-project-structure-alternative-way-29ce766682f0#.sjnhetuhb
            res.srcDirs = [
                    'src/main/res/common',
                    'src/main/res/dialog',
                    'src/main/res/floating',
                    'src/main/res/icon',
                    'src/main/res/main',
                    'src/main/res/on_boarding',
                    'src/main/res/settings',
                    'src/main/res/settings_about',
                    'src/main/res/settings_ad_blocker',
                    'src/main/res/settings_search_engine',
                    'src/main/res/settings_theme',
                    'src/main/res/suggestion'
            ]
        }

        // Everything related to connected test live in src/androidTest/core/java
        androidTest.java.srcDir 'src/androidTest/core/java'

        // Instrumented unit tests live in src/androidTest/unit
        androidTest.java.srcDir 'src/androidTest/unit/java'

        // Instrumented integration tests live in src/androidTest/integration
        androidTest.java.srcDir 'src/androidTest/integration/java'

        // Instrumented use cases tests live in src/androidTest/usecases
        androidTest.java.srcDir 'src/androidTest/usecases/java'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

configurations {
    // KtLint - Static code analysis
    // https://proandroiddev.com/kotlin-static-analysis-why-and-how-a12042e34a98
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":feature_purchase")

    // Language
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // AndroidX
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "com.google.android.material:material:1.0.0"

    // Google
    implementation "com.google.firebase:firebase-core:17.2.0"
    implementation "com.google.firebase:firebase-config:19.0.3"

    // Third party - Monitoring
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.9@aar') {
        transitive = true
    }

    // Third party - UI
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'
    implementation 'com.hannesdorfmann:adapterdelegates4:4.2.0'

    // Third party - Network
    // noinspection GradleDependency
    implementation "com.squareup.okhttp3:okhttp:3.12.1" // Require to support API<21

    // KtLint - Static code analysis
    // https://proandroiddev.com/kotlin-static-analysis-why-and-how-a12042e34a98
    ktlint "com.github.shyiko:ktlint:0.31.0"

    // Testing-only dependencies
    androidTestImplementation "androidx.annotation:annotation:1.1.0"
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.1.1') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    androidTestImplementation 'tools.fastlane:screengrab:1.2.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.1.0'
    testImplementation 'org.json:json:20190722'
}

task publish(type: Exec) {
    group "play-store"
    commandLine "sh", "../config/play-store/publish.sh"
}

// KtLint - Static code analysis
// https://proandroiddev.com/kotlin-static-analysis-why-and-how-a12042e34a98
task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // args "--reporter=checkstyle, output=${buildDir}/ktlint.xml
}

apply plugin: 'com.google.gms.google-services'